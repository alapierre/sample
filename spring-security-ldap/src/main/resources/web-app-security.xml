<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"

    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
        ">

    <security:http>
        <security:intercept-url pattern="/secured/**" access="ROLE_SOFTPROJECT-DEVELOPERS,ROLE_USER" />
        <security:intercept-url pattern="/logout" access="IS_AUTHENTICATED_FULLY" />
        <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:form-login />
        <security:anonymous />
        <security:http-basic />
        <security:logout logout-url="/logout" logout-success-url="/home" />
        <security:remember-me />
    </security:http>

    <security:authentication-manager alias="myAuthManager">
        <security:authentication-provider ref="adAuthenticationProvider" />
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                group-authorities-by-username-query="select groups.id, groups.name, roles.role_name from users join group_users using(username) join groups using(id) join group_authorities using(group_id) join roles on group_authorities.authority = roles.role_name where users.username=?" />
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="adAuthenticationProvider"
        class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
        <constructor-arg value="${core.ldap.domain}" />
        <constructor-arg value="${core.ldap.url}" />
        <!--<property name="userDetailsContextMapper" ref="ldapUserDetailsContextMapper" />-->
        <property name="authoritiesMapper" ref="ldapGrantedAuthoritiesMapper" />
    </bean>

    <bean id="ldapUserDetailsContextMapper"
        class="pl.com.softproject.test.ldap.web.app.service.UserDetailsContextMapperImpl" />

    <bean id="ldapGrantedAuthoritiesMapper"
        class="pl.com.softproject.test.ldap.web.app.service.GrantedAuthoritiesMapperImpl" />

    <security:global-method-security pre-post-annotations="enabled">
        <security:expression-handler ref="expressionHandler" />
    </security:global-method-security>

    <bean id="expressionHandler"
        class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="roleHierarchy" ref="roleHierarchy" />
    </bean>

    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

    <bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <property name="hierarchy">
            <value>
                ROLE_ADMIN > ROLE_USER
                ROLE_ADMIN > ROLE_SOFTPROJECT-DEVELOPERS
                ROLE_USER > ROLE_VISITOR
                ROLE_SOFTPROJECT-DEVELOPERS > ROLE_VISITOR
            </value>
        </property>
    </bean>

</beans>
